{"version":3,"sources":["./src/app/api/state/state.component.html","./src/app/api/state/services/state.service.ts","./src/app/api/state/state-routing.module.ts","./src/app/api/state/state.component.css","./src/app/api/state/state.component.ts","./src/app/api/state/state.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8XAA8X,UAAU,qBAAqB,YAAY,qBAAqB,YAAY,qBAAqB,oBAAoB,uG;;;;;;;;;;;;;;;;;;ACA1c;AACO;AAOhD,IAAa,YAAY,GAAzB,MAAa,YAAY;IAEvB,YAAoB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;IAAI,CAAC;IAE9C,SAAS,CAAC,GAAG;QAEX,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,GAAG,CAAC,CAAC;IAC3C,CAAC;IAED,oBAAoB,CAAC,GAAG;QAEtB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,GAAG,CAAC,CAAC;IAC3C,CAAC;CACF;;YAXgC,+DAAU;;AAF9B,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAG+B,+DAAU;GAF9B,YAAY,CAaxB;AAbwB;;;;;;;;;;;;;;;;;;;;;;ACR4B;AACM;AACpB;AACU;AAE1C,MAAM,oBAAoB,GAAS;IACxC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;QACzB,WAAW,EAAE,CAAC,qEAAa,CAAC;KAC7B;CACF,CAAC;AAWF,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAG9B;AAHY,kBAAkB;IAR9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC;SAC5C;QACD,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GACW,kBAAkB,CAG9B;AAH8B;;;;;;;;;;;;ACtB/B,iCAAiC,4BAA4B,8BAA8B,GAAG,UAAU,kBAAkB,GAAG,+CAA+C,2b;;;;;;;;;;;;;;;;;;;;ACA5H;AAEM;AACJ;AACY;AAO9D,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElD,QAAQ;QAEN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QAEP,MAAM,GAAG,GAAC,qEAAW,CAAC,UAAU,GAAC,4DAAa,GAAC,MAAM,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CACxC,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,CAAC,EACH,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAE,GAAG,CAAE,EAC3B,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAE,+BAA+B,CAAE,CAAE,CAAC;QACzD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,mBAAmB;QAEjB,OAAO,IAAI,CAAC,MAAM,KAAG,SAAS,CAAC;IACjC,CAAC;CACF;;YAtBmC,oEAAY;;AAJnC,cAAc;IAL1B,+DAAS,CAAE;QACV,QAAQ,EAAE,WAAW;QACrB,qJAAqC;;KAEtC,CAAE;2EAKiC,oEAAY;GAJnC,cAAc,CA0B1B;AA1B0B;;;;;;;;;;;;;;;;;;;;;;ACXY;AACM;AACM;AACF;AACS;AAa1D,IAAa,WAAW,GAAxB,MAAa,WAAW;CAGvB;AAHY,WAAW;IAXvB,8DAAQ,CAAC;QACR,YAAY,EACV;YACE,+DAAc;SACf;QACH,OAAO,EAAE;YACP,4DAAY;YACZ,kEAAmB;YACnB,wEAAkB;SACnB;KACF,CAAC;GACW,WAAW,CAGvB;AAHuB","file":"state-state-module-es2015.js","sourcesContent":["module.exports = \"\\n<div style=\\\"text-align: center\\\" >\\n  <h3> States List</h3>\\n  <div  *ngIf=\\\"statesDataAvailable()\\\" style=\\\"text-align: center\\\">\\n    <table style=\\\"text-align: center\\\">\\n      <tr>\\n        <th>Id</th>\\n        <th>name</th>\\n        <th>code</th>\\n        <th>country</th>\\n      </tr>\\n      <tr *ngFor=\\\"let state of (statesObservable)\\\">\\n        <td>{{state.id}}</td>\\n        <td>{{state.name}}</td>\\n        <td>{{state.code}}</td>\\n        <td>{{state.country.name}}</td>\\n      </tr>\\n    </table>\\n  </div>\\n  <a routerLink=\\\"/home\\\">Click here to Home</a>\\n</div>\\n\"","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {State} from '../model/state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService\n{\n  constructor(private httpClient:HttpClient) { }\n\n  getStates(url)\n  {\n    return this.httpClient.get<State[]>(url);\n  }\n\n  getStatesByCountryId(url)\n  {\n    return this.httpClient.get<State[]>(url);\n  }\n}\n","import {RouterModule, Routes} from '@angular/router';\nimport {UserAuthGuard} from '../../guards/user-auth.guard';\nimport {NgModule} from '@angular/core';\nimport {StateComponent} from './state.component';\n\nexport const stateManagementRoute: Routes=[\n  {\n    path: '',\n    component: StateComponent,\n    canActivate: [UserAuthGuard]\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(stateManagementRoute),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class StateRoutingModule\n{\n\n}\n","module.exports = \"table, th, td {\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\nth, td {\\n  padding: 15px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBpL3N0YXRlL3N0YXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBdUI7RUFDdkIseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSxhQUFhO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9hcGkvc3RhdGUvc3RhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlLCB0aCwgdGQge1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cbnRoLCB0ZCB7XG4gIHBhZGRpbmc6IDE1cHg7XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {State} from './model/state';\nimport {StateService} from './services/state.service';\nimport {STATE_API_URL} from '../../app.constants';\nimport {environment} from '../../../environments/environment';\n\n@Component( {\n  selector: 'app-state',\n  templateUrl: './state.component.html',\n  styleUrls: ['./state.component.css']\n} )\nexport class StateComponent implements OnInit\n{\n  states: Array<State>;\n\n  constructor(private stateService: StateService) {}\n\n  ngOnInit()\n  {\n    this.getStates();\n  }\n\n  getStates()\n  {\n    const url=environment.SERVER_URL+STATE_API_URL+'list';\n    this.stateService.getStates(url).subscribe(\n      data => {\n        this.states=data;\n        },\n      err => console.error( err ),\n      () => console.log( 'States retrieved from backend' ) );\n    return this.states;\n  }\n  statesDataAvailable(): boolean\n  {\n    return this.states!==undefined;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {StateComponent} from './state.component';\nimport {StateRoutingModule} from './state-routing.module';\n\n@NgModule({\n  declarations:\n    [\n      StateComponent\n    ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    StateRoutingModule\n  ]\n})\nexport class StateModule\n{\n\n}\n"],"sourceRoot":""}