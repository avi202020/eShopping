{"version":3,"sources":["./src/app/api/city/city.component.html","./src/app/api/city/city-routing.module.ts","./src/app/api/city/city.component.css","./src/app/api/city/city.component.ts","./src/app/api/city/city.module.ts","./src/app/api/city/services/city.service.ts"],"names":[],"mappings":"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","file":"city-city-module-es2015.js","sourcesContent":["module.exports = \"\\n<div class=\\\"container-fluid container\\\">\\n  <h3> Cities List</h3>\\n  <div  *ngIf=\\\"cityDataAvailable()\\\">\\n    <table style=\\\"text-align: center\\\">\\n      <tr>\\n        <th>Id</th>\\n        <th>name</th>\\n        <th>State Name</th>\\n      </tr>\\n      <tr *ngFor=\\\"let city of cities\\\">\\n        <td>{{city.id}}</td>\\n        <td>{{city.name}}</td>\\n        <td>{{city.state.name}}</td>\\n      </tr>\\n    </table>\\n    <div  style=\\\"margin: 30px\\\">\\n      <input type=\\\"button\\\" class=\\\" btn btn-primary\\\" style=\\\"margin: 30px\\\" (click)=\\\"getFirstPageCities()\\\" value=\\\"Home\\\" >\\n      <input type=\\\"button\\\" class=\\\" btn btn-primary\\\" style=\\\"margin: 30px\\\" (click)=\\\"getPreviousCities()\\\" value=\\\"Back\\\" >\\n      <input type=\\\"button\\\" class=\\\" btn btn-primary\\\" style=\\\"margin: 30px\\\" (click)=\\\"getNextCities()\\\" value=\\\"Next\\\" >\\n    </div>\\n  </div>\\n</div>\\n\"","import {RouterModule, Routes} from '@angular/router';\nimport {UserAuthGuard} from '../../guards/user-auth.guard';\nimport {NgModule} from '@angular/core';\nimport {CityComponent} from './city.component';\n\nexport const cityManagementRoute: Routes=[\n  {\n    path: '',\n    component: CityComponent,\n    canActivate: [UserAuthGuard]\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(cityManagementRoute),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CityRoutingModule\n{\n\n}\n","module.exports = \"table, th, td {\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\nth, td {\\n  padding: 15px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBpL2NpdHkvY2l0eS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9hcHAvYXBpL2NpdHkvY2l0eS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUsIHRoLCB0ZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxudGgsIHRkIHtcbiAgcGFkZGluZzogMTVweDtcbn1cbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {City} from './model/city';\nimport {CityService} from './services/city.service';\nimport {CITY_API_URL} from '../../app.constants';\nimport {environment} from '../../../environments/environment';\n\n@Component( {\n  selector: 'app-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.css']\n} )\nexport class CityComponent implements OnInit\n{\n\n  cities: Array<City>;\n  pageSize: number;\n  pageNumber: number;\n  totalPages: number;\n\n  constructor(private cityService:CityService)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.pageNumber=0;\n    this.pageSize=10;\n    this.getCities();\n  }\n\n  getCities()\n  {\n    const url=environment.SERVER_URL+CITY_API_URL+'list?pageNumber='+this.pageNumber+'&pageSize='+this.pageSize;\n\n    this.cityService.getCities(url).subscribe(\n      data =>\n      {\n        // @ts-ignore\n        this.cities=data.content;\n        // @ts-ignore\n        this.totalPages=data.totalPages;\n        },\n      err => console.error( err ),\n      () => console.log( 'Cities retrieved from backend' ) );\n    return this.cities;\n  }\n\n  getNextCities()\n  {\n    if(this.pageNumber>=this.totalPages)\n    {\n      this.pageNumber=this.totalPages;\n    }\n    else\n      {\n        this.pageNumber++;\n    }\n    this.getCities();\n  }\n\n  getPreviousCities()\n  {\n    if(this.pageNumber<=0)\n    {\n      this.pageNumber=0;\n    }\n    else\n    {\n      this.pageNumber--;\n    }\n    this.getCities();\n  }\n\n  getFirstPageCities()\n  {\n    this.pageNumber=0;\n    this.getCities();\n  }\n\n  cityDataAvailable(): boolean\n  {\n    return this.cities !== undefined;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {CityComponent} from './city.component';\nimport {CityRoutingModule} from './city-routing.module';\n\n@NgModule({\n  declarations:\n    [\n      CityComponent\n    ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CityRoutingModule\n  ]\n})\nexport class CityModule\n{\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {City} from '../model/city';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService\n{\n  constructor(private httpClient:HttpClient) { }\n\n  getCities(url)\n  {\n    return this.httpClient.get<City[]>(url);\n  }\n\n  getCitiesByStateId(url: string)\n  {\n    return this.httpClient.get<City[]>(url);\n  }\n}\n"],"sourceRoot":""}