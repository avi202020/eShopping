{"version":3,"sources":["./src/app/api/cart/cart.component.html","./src/app/api/cart/cart-routing.module.ts","./src/app/api/cart/cart.component.css","./src/app/api/cart/cart.component.ts","./src/app/api/cart/cart.module.ts"],"names":[],"mappings":"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","file":"cart-cart-module-es5.js","sourcesContent":["module.exports = \"<ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" color=\\\"#fff\\\" size=\\\"large\\\" type=\\\"ball-elastic-dots\\\"></ngx-spinner>\\n\\n\\n<h1> My Cart</h1>\\n\\n<div *ngIf=\\\"cartDataAvailable()\\\"\\n     class=\\\"table-responsive-sm table-responsive-xs table-responsive-md table-responsive-lg\\\">\\n  <table class=\\\"table\\\">\\n    <thead style=\\\"text-align: center\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Product</th>\\n      <th scope=\\\"col\\\">Quantity</th>\\n      <th scope=\\\"col\\\">Cost</th>\\n      <th scope=\\\"col\\\"></th>\\n    </tr>\\n    </thead>\\n    <tbody style=\\\"text-align: center\\\">\\n    <tr *ngFor=\\\"let cartProduct of (cart.cartProducts); index as i\\\">\\n      <th scope=\\\"row\\\">{{i + 1}}</th>\\n      <td><a [routerLink]=\\\"['/product', cartProduct.product.id]\\\">{{cartProduct.product.name}}</a></td>\\n      <td>\\n        <p-spinner (onChange)=\\\"updateCartProductQuantity(cartProduct)\\\" [(ngModel)]=\\\"cartProduct.quantity\\\"  [step]=\\\"1\\\"  [max]=\\\"getInventory(cartProduct)\\\">\\n          cartProduct.quantity\\n        </p-spinner>\\n      </td>\\n      <td>{{cartProduct.product.price.currency.symbol}} {{cartProduct.quantity * cartProduct.product.price.amount}}</td>\\n      <td>\\n        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteProductFromCart(cartProduct)\\\">Delete</button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n\\n  <input (click)=\\\"deleteCart()\\\" class=\\\" btn btn-danger btn-sm\\\" type=\\\"button\\\" value=\\\"Delete Cart\\\">\\n  <p style=\\\"text-align: center\\\">\\n    <input (click)=\\\"goToProducts()\\\" class=\\\" btn btn-primary\\\" type=\\\"button\\\" value=\\\"All Products\\\" style=\\\"margin: 20px\\\">\\n    <input (click)=\\\"checkout()\\\" class=\\\" btn btn-primary\\\" type=\\\"button\\\" value=\\\"Checkout\\\" style=\\\"margin: 20px\\\">\\n\\n  </p>\\n</div>\\n\\n\"","import {RouterModule, Routes} from '@angular/router';\nimport {CartComponent} from './cart.component';\nimport {UserAuthGuard} from '../../guards/user-auth.guard';\nimport {NgModule} from '@angular/core';\n\nexport const cartManagementRoute: Routes=[\n  {\n    path: '',\n    component: CartComponent,\n    canActivate: [UserAuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(cartManagementRoute),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class CartRoutingModule\n{\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9jYXJ0L2NhcnQuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {CartService} from './service/cart.service';\nimport {CART_API_URL, INVENTORY_API_URL} from '../../app.constants';\nimport {Cart} from './model/cart';\nimport {AuthService} from '../../core/auth/auth.service';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {CartProduct} from './model/cart-product';\nimport {Router} from '@angular/router';\nimport {ProductInventory} from '../product/model/product-inventory';\nimport {environment} from '../../../environments/environment';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit\n{\n  cart: Cart;\n  cartProducts: Array<CartProduct>;\n  productInventory:Array<ProductInventory>;\n  totalCost:number;\n  constructor(private cartService:CartService,\n              private ngxSpinnerService:NgxSpinnerService,\n              private authService:AuthService,\n              private router:Router)\n  {\n\n  }\n\n  ngOnInit()\n  {\n    this.totalCost=0;\n    this.getMyCart();\n\n  }\n\n  //Takes care update and delete if quantity is zero\n  updateCartProductQuantity(cartProduct: CartProduct)\n  {\n      this.ngxSpinnerService.show();\n      const cartUrl=environment.SERVER_URL+CART_API_URL+'product/update';\n      this.cartService.updateCartProduct( cartUrl, cartProduct ).subscribe(\n        data=>\n        {\n          this.getMyCart();\n          this.ngxSpinnerService.hide();\n        },\n        error1 =>\n        {\n          this.ngxSpinnerService.hide();\n        }\n      );\n  }\n\n  deleteProductFromCart(cartProduct: CartProduct)\n  {\n    if(confirm('Are you sure you want to delete '+cartProduct.product.name+' from Cart?'))\n    {\n      this.ngxSpinnerService.show();\n      const cartUrl=environment.SERVER_URL+CART_API_URL+'product/delete/'+cartProduct.id;\n      this.cartService.deleteCartProduct( cartUrl ).subscribe(\n        data=>\n        {\n          this.getMyCart();\n          this.ngxSpinnerService.hide();\n        },\n        error1 =>\n        {\n          this.ngxSpinnerService.hide();\n        }\n      );\n    }\n\n  }\n\n  cartDataAvailable()\n  {\n    return this.cart!==undefined && this.cart !== null && this.cartProducts.length>=0;\n  }\n\n  deleteCart()\n  {\n    if(confirm('Are you sure you wanna delete the cart?'))\n    {\n      this.ngxSpinnerService.show();\n      const cartUrl=environment.SERVER_URL+CART_API_URL+'delete/'+this.cartService.getCurrentCart.id;\n      this.cartService.deleteMyCart(cartUrl).subscribe(\n        data=>\n        {\n          this.getMyCart();\n          this.ngxSpinnerService.hide();\n        },\n        error1 =>\n        {\n          this.ngxSpinnerService.hide();\n        }\n      );\n    }\n  }\n\n  private getMyCart()\n  {\n    this.ngxSpinnerService.show();\n    const cartUrl=environment.SERVER_URL+CART_API_URL+'find/user/'+this.authService.currentUserValue.id;\n    this.cartService.getMyCart( cartUrl ).subscribe(\n      data =>\n      {\n        localStorage.setItem( 'currentCart', JSON.stringify( data ) );\n        this.cartService.currentCartSubject.next( data );\n        this.cart=data;\n        if(data===null)\n        {\n          this.ngxSpinnerService.hide();\n          return;\n        }\n        if( data.cartProducts!==null)\n        {\n          this.cartProducts=data.cartProducts;\n        }\n        this.getProductInventory();\n        this.ngxSpinnerService.hide();\n      }\n    );\n  }\n\n\n\n  private getProductInventory()\n  {\n    let productIdList=[];\n    this.cart.cartProducts.forEach( function(cartProduct)\n       {\n          productIdList.push(cartProduct.product.id);\n       });\n    const inventoryUrl = environment.SERVER_URL + INVENTORY_API_URL+'product/ids';\n    this.cartService.getProductInventory( inventoryUrl, productIdList ).pipe()\n        .subscribe(\n          data =>\n          {\n            this.productInventory = data;\n          },\n          error =>\n          {\n            console.log(error);\n          });\n  }\n\n  getInventory(cartProduct: CartProduct):number\n  {\n    if(this.productInventory!==undefined)\n    {\n      for(let i=0;i<this.productInventory.length;i++)\n      {\n        if(cartProduct.product.id === this.productInventory[i].product.id && cartProduct.quantity <= this.productInventory[i].quantity)\n        {\n          return this.productInventory[i].quantity;\n        }\n      }\n    }\n     return 1;\n  }\n\n  goToProducts()\n  {\n    this.router.navigate(['/product/list']);\n  }\n\n  checkout()\n  {\n    this.router.navigate(['/checkout']);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CartRoutingModule} from './cart-routing.module';\nimport {RouterModule} from '@angular/router';\nimport {CartComponent} from './cart.component';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgxSpinnerModule} from 'ngx-spinner';\nimport {SpinnerModule} from 'primeng/primeng';\n\n\n@NgModule({\n  declarations:\n    [\n    CartComponent\n  ],\n  imports:\n    [\n      CommonModule,\n      ReactiveFormsModule,\n      NgxSpinnerModule,\n      RouterModule,\n      CartRoutingModule,\n      SpinnerModule,\n      FormsModule\n    ],\n  exports:\n    [\n    RouterModule\n  ]\n})\n\nexport class CartModule\n{\n  \n}\n"],"sourceRoot":""}