{"version":3,"sources":["./src/app/api/category/service/category.service.ts","./src/app/api/product/service/product.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAyC;AACO;AAMhD;IAGE,yBAAoB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;IAAI,CAAC;IAE9C,uCAAa,GAAb,UAAc,GAAG;QAEf,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAa,GAAG,CAAC,CAAC;IAC9C,CAAC;IAED,wCAAc,GAAd,UAAe,GAAG,EAAE,QAAQ;QAExB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;QAC5C,uDAAuD;IACzD,CAAC;IAED,4CAAkB,GAAlB,UAAmB,GAAG;QAEpB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED,wCAAc,GAAd,UAAe,GAAW,EAAE,QAAkB;QAE5C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAGD,wCAAc,GAAd,UAAe,GAAW;QAExB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;;gBA3B8B,+DAAU;;IAH9B,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI+B,+DAAU;OAH9B,eAAe,CA+B3B;IAAD,sBAAC;CAAA;AA/B2B;;;;;;;;;;;;;;;;;;;ACPa;AACO;AAShD;IAEE,wBAAoB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;IAAI,CAAC;IAE9C,oCAAW,GAAX,UAAY,GAAG;QAEb,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,GAAG,CAAC,CAAC;IAC7C,CAAC;IAED,sCAAa,GAAb,UAAc,GAAW,EAAE,OAAgB;QAEzC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,GAAG,EAAC,OAAO,CAAC,CAAC;IAEpD,CAAC;IAED,sCAAa,GAAb,UAAc,GAAW;QAEvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,GAAG,CAAE,CAAC;IAChD,CAAC;IAED,0CAAiB,GAAjB,UAAkB,GAAW;QAE3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,GAAG,CAAE,CAAC;IAC7C,CAAC;IAED,4CAAmB,GAAnB,UAAoB,GAAW;QAE7B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoB,GAAG,CAAE,CAAC;IACtD,CAAC;IAED,yCAAgB,GAAhB,UAAiB,GAAW;QAE1B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkB,GAAG,CAAE,CAAC;IACpD,CAAC;IAED,sCAAa,GAAb,UAAc,GAAW,EAAE,OAAgB;QAEzC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,GAAG,EAAE,OAAO,CAAE,CAAC;IACtD,CAAC;;gBApC8B,+DAAU;;IAF9B,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG+B,+DAAU;OAF9B,cAAc,CAuC1B;IAAD,qBAAC;CAAA;AAvC0B","file":"common-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Category} from '../model/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService\n{\n\n  constructor(private httpClient:HttpClient) { }\n\n  getCategories(url)\n  {\n    return this.httpClient.get<Category[]>(url);\n  }\n\n  createCategory(url, category)\n  {\n      return this.httpClient.post(url,category);\n    //return this.httpClient.put(url,httpOptions,category);\n  }\n\n  getCategoryDetails(url)\n  {\n    return this.httpClient.get<Category>(url);\n  }\n\n  updateCategory(url: string, category: Category)\n  {\n    return this.httpClient.put(url,category);\n  }\n\n\n  deleteCategory(url: string)\n  {\n    return this.httpClient.delete(url);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Product} from '../model/product';\nimport {Currency} from '../model/currency';\nimport {Manufacturer} from '../../manufacturer/model/manufacturer';\nimport {ProductInventory} from '../model/product-inventory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService\n{\n  constructor(private httpClient:HttpClient) { }\n\n  getProducts(url)\n  {\n    return this.httpClient.get<Product[]>(url);\n  }\n\n  createProduct(url: string, product: Product)\n  {\n    return this.httpClient.post<Product>(url,product);\n\n  }\n\n  getCurrencies(url: string)\n  {\n    return this.httpClient.get<Currency[]>( url );\n  }\n\n  getProductDetails(url: string)\n  {\n    return this.httpClient.get<Product>( url );\n  }\n\n  getProductInventory(url: string)\n  {\n    return this.httpClient.get<ProductInventory>( url );\n  }\n\n  getManufacturers(url: string)\n  {\n    return this.httpClient.get<Manufacturer[]>( url );\n  }\n\n  updateProduct(url: string, product: Product)\n  {\n    return this.httpClient.put<Product>( url, product );\n  }\n}\n"],"sourceRoot":""}