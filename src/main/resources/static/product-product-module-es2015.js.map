{"version":3,"sources":["./src/app/api/product/product-delete/product-delete.component.html","./src/app/api/product/product-edit/product-edit.component.html","./src/app/api/product/product-home/product-home.component.html","./src/app/api/product/product-list/product-list.component.html","./src/app/api/product/product-new/product-new.component.html","./src/app/api/product/product-view/product-view.component.html","./src/app/api/product/product.component.html","./src/app/api/cart/model/cart-product.ts","./src/app/api/cart/service/cart.service.ts","./src/app/api/product/model/currency.ts","./src/app/api/product/model/price.ts","./src/app/api/product/model/product.ts","./src/app/api/product/product-delete/product-delete.component.css","./src/app/api/product/product-delete/product-delete.component.ts","./src/app/api/product/product-edit/product-edit.component.css","./src/app/api/product/product-edit/product-edit.component.ts","./src/app/api/product/product-home/product-home.component.css","./src/app/api/product/product-home/product-home.component.ts","./src/app/api/product/product-list/product-list.component.css","./src/app/api/product/product-list/product-list.component.ts","./src/app/api/product/product-new/product-new.component.css","./src/app/api/product/product-new/product-new.component.ts","./src/app/api/product/product-routing.module.ts","./src/app/api/product/product-view/product-view.component.css","./src/app/api/product/product-view/product-view.component.ts","./src/app/api/product/product.component.css","./src/app/api/product/product.component.ts","./src/app/api/product/product.module.ts"],"names":[],"mappings":"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","file":"product-product-module-es2015.js","sourcesContent":["module.exports = \"<p>\\n  product-delete works!\\n</p>\\n\"","module.exports = \"<div *ngIf=\\\"productDataAvailable()\\\">\\n  <h2>Update Product</h2>\\n  <br/>\\n  <form [formGroup]=\\\"productForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"id\\\">Product Id</label>\\n      <input class=\\\"form-control\\\" formControlName=\\\"id\\\" id=\\\"id\\\" name=\\\"id\\\"type=\\\"text\\\">\\n      <small class=\\\"form-text text-muted\\\" id=\\\"emailHelp\\\"></small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name</label>\\n      <input class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" type=\\\"text\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" id=\\\"description\\\" required>\\n      </textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"amount\\\">Price (In $)</label> <br/>\\n      <input type=\\\"text\\\" formControlName=\\\"amount\\\" id=\\\"amount\\\"  required >\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Category:\\n        <select [compareWith]=\\\"compareCategoryFn\\\"  class=\\\"form-control\\\" formControlName=\\\"categoryControl\\\" name=\\\"categoryControl\\\">\\n          <option *ngFor=\\\"let category of categories\\\" [ngValue]=\\\"category\\\">\\n            {{category.name}}\\n          </option>\\n        </select>\\n      </label>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Manufacturer:\\n        <select  [compareWith]=\\\"compareManufacturerFn\\\"  class=\\\"form-control\\\" formControlName=\\\"manufacturerControl\\\" name=\\\"manufacturerControl\\\">\\n          <option *ngFor=\\\"let manufacturer of manufacturers\\\" [ngValue]=\\\"manufacturer\\\">\\n            {{manufacturer.name}}\\n          </option>\\n        </select>\\n      </label>\\n    </div>\\n\\n    <button (click)=\\\"updateProduct()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Update</button>\\n    <button (click)=\\\"goBack()\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left: 30px\\\" type=\\\"button\\\">Cancel</button>\\n\\n  </form>\\n\\n</div>\\n\"","module.exports = \"<h1> Products </h1>\\n\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\"><a routerLink=\\\"list\\\" routerLinkActive=\\\"active\\\">All Products</a></li>\\n  <li class=\\\"list-group-item\\\"><a routerLink=\\\"new\\\" routerLinkActive=\\\"active\\\">Create New Product</a></li>\\n  <li class=\\\"list-group-item\\\"><a routerLink=\\\"update\\\" routerLinkActive=\\\"active\\\">Update Product</a></li>\\n  <li class=\\\"list-group-item\\\"><a routerLink=\\\"delete\\\" routerLinkActive=\\\"active\\\">Delete Product</a></li>\\n</ul>\\n\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" color=\\\"#fff\\\" size=\\\"large\\\" type=\\\"ball-elastic-dots\\\"></ngx-spinner>\\n\\n<div class=\\\"container container-fluid\\\">\\n  <h3 style=\\\"text-align: center\\\" > Products List</h3>\\n  <div *ngIf=\\\"productsDataAvailable()\\\">\\n    <table class=\\\"table table-bordered\\\">\\n      <tr style=\\\"text-align: center\\\" >\\n        <th> Product Id</th>\\n        <th>Name</th>\\n        <th>Category</th>\\n        <th>Manufacturer</th>\\n        <th>Price</th>\\n        <th>Description</th>\\n      </tr>\\n\\n      <tr *ngFor=\\\"let product of (products)\\\" style=\\\"text-align: center\\\">\\n        <td>{{product.id}}</td>\\n        <td><a [routerLink]=\\\"['/product', product.id]\\\">{{product.name}}</a></td>\\n        <td>{{product.category.name}}</td>\\n        <td>{{product.manufacturer.name}}</td>\\n        <td>{{product.price.currency.symbol}}{{product.price.amount}}</td>\\n        <td>{{product.description}}</td>\\n      </tr>\\n    </table>\\n\\n    <div style=\\\"text-align: center\\\">\\n      <a [routerLink]=\\\"['/product']\\\" style=\\\"margin-right: 30px\\\">Back</a>\\n      <a [routerLink]=\\\"['/product/new']\\\" style=\\\"margin-right: 30px\\\">Create New</a>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \"<div>\\n<h2>Create New Product</h2>\\n\\n<br/>\\n<form  [formGroup]=\\\"productForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"id\\\">Product Id</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\"  id=\\\"id\\\" formControlName=\\\"id\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">Automatically generated by system</small>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\"  id=\\\"name\\\" formControlName=\\\"name\\\" required placeholder=\\\"Enter Product Name\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"description\\\">Description</label>\\n    <textarea class=\\\"form-control\\\"  id=\\\"description\\\" formControlName=\\\"description\\\" required placeholder=\\\"Enter Product Description\\\">\\n    </textarea>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"amount\\\">Price ($)</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"amount\\\" id=\\\"amount\\\" placeholder=\\\"Enter Product Price (in USD)\\\" required>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label>Category:\\n      <select class=\\\"form-control\\\" name=\\\"categoryControl\\\" formControlName=\\\"categoryControl\\\">\\n        <option  [ngValue]=\\\"category\\\" *ngFor=\\\"let category of categories\\\" [defaultSelected]=\\\"true\\\">\\n          {{category.name}}\\n        </option>\\n      </select>\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label>Manufacturer:\\n      <select class=\\\"form-control\\\" formControlName=\\\"manufacturerControl\\\" name=\\\"manufacturerControl\\\">\\n        <option   [ngValue]=\\\"manufacturer\\\" *ngFor=\\\"let manufacturer of manufacturers\\\"  [defaultSelected]=\\\"true\\\">\\n          {{manufacturer.name}}\\n        </option>\\n      </select>\\n    </label>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"createProduct()\\\">Submit</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"  style=\\\"margin-left: 30px\\\" (click)=\\\"goBack()\\\">Cancel</button>\\n\\n</form>\\n\\n</div>\\n\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" color=\\\"#fff\\\" size=\\\"large\\\" type=\\\"ball-elastic-dots\\\"></ngx-spinner>\\n\\n<div *ngIf=\\\"productDataAvailable()\\\">\\n  <form [formGroup]=\\\"productForm\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">Product Id</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control-plaintext\\\" formControlName=\\\"id\\\" id=\\\"id\\\" readonly type=\\\"text\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"name\\\">Name</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control-plaintext\\\" formControlName=\\\"name\\\" id=\\\"name\\\" readonly type=\\\"text\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"category\\\">Category</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control-plaintext\\\" formControlName=\\\"category\\\" id=\\\"category\\\" readonly type=\\\"text\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"manufacturer\\\">Manufacturer</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control-plaintext\\\" formControlName=\\\"manufacturer\\\" id=\\\"manufacturer\\\" readonly type=\\\"text\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"quantityAvailable\\\">Price</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control-plaintext\\\" id=\\\"quantityAvailable\\\" formControlName=\\\"price\\\"  readonly type=\\\"text\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"price\\\">Available Quantity</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control-plaintext\\\" id=\\\"price\\\" formControlName=\\\"quantityAvailable\\\"  readonly type=\\\"text\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"description\\\">Description</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control-plaintext\\\" formControlName=\\\"description\\\"  id=\\\"description\\\" readonly type=\\\"text\\\">\\n      </div>\\n    </div>\\n  </form>\\n\\n\\n<p>\\n  <a [routerLink]=\\\"['/product/list']\\\" style=\\\"margin-right: 30px\\\">Back </a>\\n  <a [routerLink]=\\\"['./edit']\\\" style=\\\"margin-right: 30px\\\">Edit </a>\\n  <a [routerLink]=\\\"['./delete']\\\">Delete </a>\\n  <br/>  <br/>\\n  <input type=\\\"button\\\" class=\\\" btn btn-primary\\\" (click)=\\\"addProductToCart()\\\" value=\\\"Add to Cart\\\" [disabled]=\\\"isProductInventoryEmpty()\\\">\\n\\n</p>\\n\\n\\n</div>\\n\"","module.exports = \"<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import {Product} from '../../product/model/product';\nimport {Cart} from './cart';\n\nexport class CartProduct\n{\n  id: number;\n  product: Product;\n  quantity: number;\n  cart: Cart;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Cart} from '../model/cart';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {CART_STATUS_API_URL} from '../../../app.constants';\nimport {CartStatus} from '../model/cart-status';\nimport {CartProduct} from '../model/cart-product';\nimport {UserProfile} from '../../../account/user-profile/model/user-profile';\nimport {ProductInventory} from '../../product/model/product-inventory';\nimport {TaxRate} from '../../checkout/model/taxrate';\nimport {CartShippingAddress} from '../model/cart-shipping-address';\nimport {CartBillingAddress} from '../model/cart-billing-address';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService\n{\n  public currentCartSubject: BehaviorSubject<Cart>;\n  public currentCart: Observable<Cart>;\n  public cartStatuses: Array<CartStatus>;\n\n  static doesProductExistInCart(cart: Cart, newCartProduct:CartProduct)\n  {\n    if( cart.cartProducts === null || cart.cartProducts === undefined || cart.cartProducts.length === 0)\n    {\n      newCartProduct.quantity=1;\n    }\n    for(let i=0;i<cart.cartProducts.length;i++)\n    {\n      if(cart.cartProducts[i].product.id === newCartProduct.product.id)\n      {\n        newCartProduct.quantity=cart.cartProducts[i].quantity+1;\n        newCartProduct.id=cart.cartProducts[i].id;\n        break;\n      }\n    }\n    return newCartProduct;\n  }\n\n  constructor(private httpClient:HttpClient)\n  {\n    if(localStorage.getItem( 'currentCart' ) === 'undefined' || localStorage.getItem( 'currentCart' ) === null)\n    {\n      this.currentCartSubject=new BehaviorSubject<Cart>(null);\n      this.currentCart=this.currentCartSubject.asObservable();\n    }\n    else\n    {\n      this.currentCartSubject=new BehaviorSubject<Cart>(JSON.parse( localStorage.getItem( 'currentCart' ) ));\n      this.currentCart=this.currentCartSubject.asObservable();\n    }\n\n    this.getDraftCartStatusFromBackend();\n  }\n\n  async initializeCart(initializeCartUrl: string, userProfile: UserProfile)\n  {\n    let response = await this.httpClient.post<any>(initializeCartUrl,userProfile).toPromise();\n    localStorage.setItem('currentCart', JSON.stringify(response));\n    this.currentCartSubject.next(response);\n  }\n\n  public get getCurrentCart(): Cart\n  {\n   return this.currentCartSubject.value;\n  }\n\n  getMyCart(url: string)\n  {\n    return this.httpClient.get<Cart>(url);\n  }\n\n  addProductToCart(url: string, cartProduct: CartProduct)\n  {\n    return this.httpClient.post<Cart>(url,cartProduct);\n  }\n\n  async getTaxRate(url: string)\n  {\n    return await this.httpClient.get<TaxRate>(url).toPromise();\n  }\n\n  async changeShippingAddress(url: string, cartShippingAddress:CartShippingAddress)\n  {\n    return await this.httpClient.post<CartShippingAddress>(url,cartShippingAddress).toPromise();\n  }\n\n  async changeBillingAddress(url: string, cartBillingAddress:CartBillingAddress)\n  {\n    return await this.httpClient.post<CartShippingAddress>(url,cartBillingAddress).toPromise();\n  }\n\n\n  getDraftCartStatus():CartStatus\n  {\n    let statusLength=this.cartStatuses.length;\n    for(let i=0; i<statusLength;i++)\n    {\n      if(this.cartStatuses[i].status === 'Draft')\n      {\n        return this.cartStatuses[i];\n      }\n    }\n    return null;\n  }\n\n  getDraftCartStatusFromBackend()\n  {\n    const url=environment.SERVER_URL+CART_STATUS_API_URL+'list';\n    this.httpClient.get<CartStatus[]>(url).subscribe(\n      data=>\n      {\n        this.cartStatuses=data;\n      },\n      error1 =>\n      {\n        console.log('Failed to load Cart Status');\n      }\n    );\n  }\n\n  deleteMyCart(cartUrl: string)\n  {\n    return this.httpClient.delete(cartUrl);\n  }\n\n  updateCartProduct(cartUrl: string, cartProduct: CartProduct)\n  {\n    return this.httpClient.post<Cart>( cartUrl, cartProduct );\n  }\n\n  deleteCartProduct(cartUrl: string)\n  {\n    return this.httpClient.delete(cartUrl);\n  }\n\n  getProductInventory(inventoryUrl: string, productIdList: any[])\n  {\n    return this.httpClient.post<ProductInventory[]>( inventoryUrl ,productIdList);\n  }\n\n\n  createOrder(url:string, cartId:number)\n  {\n      return this.httpClient.post(url, cartId);\n  }\n}\n","export class Currency\n{\n  id: number;\n  name: string;\n  symbol: string;\n  isoCode: string;\n\n  constructor(id: number)\n  {\n    this.id=id;\n  }\n}\n","import {Currency} from './currency';\n\nexport class Price\n{\n  id: number;\n  currency: Currency;\n  amount: number;\n\n  constructor(currency: Currency, amount: number)\n  {\n    this.currency=currency;\n    this.amount=amount;\n  }\n}\n","import {Category} from '../../category/model/category';\nimport {Photo} from './photo';\nimport {Price} from './price';\nimport {Manufacturer} from '../../manufacturer/model/manufacturer';\n\nexport class Product\n{\n  id: number;\n  name: string;\n  description: string;\n  category: Category;\n  photos: Array<Photo>;\n  price: Price;\n  manufacturer:Manufacturer;\n  createdBy:string;\n  createdDate:string;\n  lastModifiedBy:string;\n  lastModifiedDate:string;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9wcm9kdWN0L3Byb2R1Y3QtZGVsZXRlL3Byb2R1Y3QtZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9wcm9kdWN0L3Byb2R1Y3QtZWRpdC9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {Product} from '../model/product';\nimport {ProductService} from '../service/product.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CATEGORY_API_URL, CURRENCY_API_URL, MANUFACTURER_API_URL, PRODUCT_API_URL} from '../../../app.constants';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Currency} from '../model/currency';\nimport {Category} from '../../category/model/category';\nimport {Manufacturer} from '../../manufacturer/model/manufacturer';\nimport {CategoryService} from '../../category/service/category.service';\nimport {environment} from '../../../../environments/environment';\n\n@Component( {\n              selector: 'app-product-edit',\n              templateUrl: './product-edit.component.html',\n              styleUrls: ['./product-edit.component.css']\n            } )\nexport class ProductEditComponent implements OnInit\n{\n  product: Product;\n  categories: Array<Category>;\n  currencies: Array<Currency>;\n  manufacturers: Array<Manufacturer>;\n\n  productForm=new FormGroup(\n    {\n               id: new FormControl( {value: '', disabled: true} ),\n               name: new FormControl( '' ),\n               description: new FormControl( '' ),\n               price: new FormControl( '' ),\n               amount: new FormControl( '' ),\n               categoryControl: new FormControl(null ),\n               currency: new FormControl( '' ),\n               manufacturerControl: new FormControl( null )\n             } );\n\n\n  constructor(private productService: ProductService,\n              private categoryService: CategoryService,\n              private route: ActivatedRoute,\n              private router: Router)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.loadCategories();\n    this.loadCurrencies();\n    this.loadManufacturers();\n    this.getProduct();\n  }\n\n  private getProduct()\n  {\n    const id=this.route.snapshot.paramMap.get( 'id' );\n    const url=environment.SERVER_URL+PRODUCT_API_URL+'find/'+id;\n    this.productService.getProductDetails( url ).pipe()\n        .subscribe(\n          data =>\n          {\n            this.product=data;\n            this.productForm.patchValue(\n              {\n                      id: data.id,\n                      name: data.name,\n                      description: data.description,\n                      price: data.price,\n                      amount: data.price.amount,\n                      currency: data.price.currency,\n                      categoryControl: data.category,\n                      manufacturerControl: data.manufacturer,\n                    });\n          },\n          error =>\n          {\n            console.log( error );\n          },\n          () => console.log( 'getProduct() success' ) );\n  }\n\n  private updateProduct()\n  {\n    const id=this.route.snapshot.paramMap.get( 'id' );\n    const url=environment.SERVER_URL+PRODUCT_API_URL+'update';\n\n    const product = new Product();\n    product.id=Number( id );\n    product.name=this.productForm.value.name;\n    product.description=this.productForm.value.description;\n\n    product.category=this.productForm.value.categoryControl;\n    product.manufacturer=this.productForm.value.manufacturerControl;\n    product.price=this.productForm.value.price;\n    product.price.amount=this.productForm.value.amount;\n\n\n    this.productService.updateProduct( url, product ).subscribe(\n      value =>\n      {\n        console.log( 'Successfully updated product' );\n      }, error1 =>\n      {\n        console.log( 'Failed to update product' );\n      },\n      () =>\n      {\n        this.router.navigate( ['/product/list'] );\n      } );\n  }\n\n  private loadCategories()\n  {\n    const url=environment.SERVER_URL+CATEGORY_API_URL+'list';\n\n    this.categoryService.getCategories( url ).subscribe(\n      categories =>\n      {\n        this.categories=categories;\n        console.log( 'Successfully loaded categories' );\n      },\n      error1 =>\n      {\n        console.log( 'Failed to load categories' );\n      },\n      () =>\n      {\n      } );\n  }\n\n  private loadCurrencies()\n  {\n    const url=environment.SERVER_URL+CURRENCY_API_URL+'list';\n\n    this.productService.getCurrencies( url ).subscribe(\n      currencies =>\n      {\n        this.currencies=currencies;\n      },\n      error1 =>\n      {\n        console.log( 'Failed to load currencies' );\n      },\n      () =>\n      {\n      } );\n  }\n\n  private loadManufacturers()\n  {\n    const url=environment.SERVER_URL+MANUFACTURER_API_URL+'list';\n\n    this.productService.getManufacturers( url ).subscribe(\n      manufacturers =>\n      {\n        this.manufacturers=manufacturers;\n        console.log( 'Successfully loaded manufacturers' );\n      },\n      error1 =>\n      {\n        console.log( 'Failed to load manufacturers' );\n      },\n      () =>\n      {\n      } );\n  }\n\n  productDataAvailable(): boolean\n  {\n    return this.product!==undefined;\n  }\n\n\n  compareCategoryFn(c1: Category, c2: Category): boolean\n  {\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\n  }\n\n  compareManufacturerFn(c1: Manufacturer, c2: Manufacturer): boolean\n  {\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\n  }\n\n  goBack()\n  {\n    this.router.navigate( ['/product/list'] );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9wcm9kdWN0L3Byb2R1Y3QtaG9tZS9wcm9kdWN0LWhvbWUuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../../../core/auth/auth.service';\n\n@Component( {\n  selector: 'app-product-home',\n  templateUrl: './product-home.component.html',\n  styleUrls: ['./product-home.component.css']\n} )\nexport class ProductHomeComponent implements OnInit\n{\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n  ) {\n  }\n\n  ngOnInit()\n  {\n    if(!AuthService.isUserLoggedIn())\n    {\n\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9wcm9kdWN0L3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {Product} from '../model/product';\nimport {ProductService} from '../service/product.service';\nimport {PRODUCT_API_URL} from '../../../app.constants';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit\n{\n  products: Array<Product>;\n\n  constructor(private productService: ProductService, private spinner: NgxSpinnerService)\n  {\n  }\n  ngOnInit() {\n    this.getProducts();\n  }\n\n  productsDataAvailable(): boolean\n  {\n    return this.products!==undefined;\n  }\n\n  private getProducts()\n  {\n    let url=environment.SERVER_URL+PRODUCT_API_URL+'list';\n    this.spinner.show();\n    this.productService.getProducts(url).subscribe(\n      data =>\n      {\n        this.products=data;\n        this.spinner.hide();\n      },\n      err =>\n      {\n        this.spinner.hide();\n        console.error( err );\n      },\n      () =>\n      {\n        this.spinner.hide();\n      } );\n\n    return this.products;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9wcm9kdWN0L3Byb2R1Y3QtbmV3L3Byb2R1Y3QtbmV3LmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ProductService} from '../service/product.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {CATEGORY_API_URL, CURRENCY_API_URL, MANUFACTURER_API_URL, PRODUCT_API_URL} from '../../../app.constants';\nimport {Product} from '../model/product';\nimport {Price} from '../model/price';\nimport {CategoryService} from '../../category/service/category.service';\nimport {Category} from '../../category/model/category';\nimport {Currency} from '../model/currency';\nimport {Manufacturer} from '../../manufacturer/model/manufacturer';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-product-new',\n  templateUrl: './product-new.component.html',\n  styleUrls: ['./product-new.component.css']\n})\nexport class ProductNewComponent implements OnInit\n{\n  categories: Array<Category>;\n  currencies: Array<Currency>;\n  manufacturers: Array<Manufacturer>;\n\n  productForm = new FormGroup({\n    id: new FormControl({value:'',disabled:true}, Validators.minLength(2)),\n    name: new FormControl(''),\n    description: new FormControl(''),\n    price: new FormControl(''),\n    amount: new FormControl(''),\n    categoryControl: new FormControl('',Validators.required),\n    currency: new FormControl( '',Validators.required ),\n    manufacturerControl: new FormControl( '',Validators.required ),\n  });\n  constructor(private productService:ProductService, private categoryService:CategoryService,private router:Router) {}\n\n  ngOnInit()\n  {\n    this.loadCategories();\n    this.loadCurrencies();\n    this.loadManufacturers();\n  }\n\n\n  createProduct()\n  {\n    const product=new Product();\n    product.name=this.productForm.value.name;\n    product.description=this.productForm.value.description;\n    product.price=new Price( this.getCurrency(), this.productForm.value.amount);\n    product.category=this.productForm.value.categoryControl;\n    product.manufacturer=this.productForm.value.manufacturerControl;\n\n    const url=environment.SERVER_URL+PRODUCT_API_URL+'create';\n\n    this.productService.createProduct(url,product).subscribe(\n      value =>\n      {\n        console.log('Successfully created product');\n      },error1 =>\n      {\n        console.log('Failed to create product');\n      },\n      ()=>{\n        this.router.navigate(['/product/list']);\n      });\n  }\n\n  private getCurrency()\n  {\n    for(let currency of this.currencies)\n    {\n      if(currency.symbol === '$')\n      {\n        return new Currency(currency.id);\n      }\n    }\n    return undefined;\n  }\n\n\n  private loadCategories()\n  {\n    const url=environment.SERVER_URL+CATEGORY_API_URL+'list';\n\n    this.categoryService.getCategories(url).subscribe(\n      categories =>\n      {\n        this.categories=categories;\n      },\n        error1 =>\n      {\n      },\n      ()=>{\n      });\n  }\n\n  private loadCurrencies()\n  {\n    const url=environment.SERVER_URL+CURRENCY_API_URL+'list';\n\n    this.productService.getCurrencies( url ).subscribe(\n      currencies =>\n      {\n        this.currencies=currencies;\n      },\n      error1 =>\n      {\n      },\n      () =>\n      {\n      } );\n  }\n\n\n  private loadManufacturers()\n  {\n    const url=environment.SERVER_URL+MANUFACTURER_API_URL+'list';\n\n    this.productService.getManufacturers( url ).subscribe(\n      manufacturers =>\n      {\n        this.manufacturers=manufacturers;\n      },\n      error1 =>\n      {\n      },\n      () =>\n      {\n      } );\n  }\n\n  manufacturersDataAvailable(): boolean\n  {\n    return this.manufacturers!==undefined;\n  }\n\n  categoriesDataAvailable(): boolean\n  {\n    return this.categories!==undefined;\n  }\n\n  currenciesDataAvailable(): boolean\n  {\n    return this.currencies!==undefined;\n  }\n\n  goBack() {\n    this.router.navigate(['/product']);\n  }\n\n}\n","import {RouterModule, Routes} from '@angular/router';\nimport {UserAuthGuard} from '../../guards/user-auth.guard';\nimport {ProductListComponent} from './product-list/product-list.component';\nimport {ProductNewComponent} from './product-new/product-new.component';\nimport {ProductEditComponent} from './product-edit/product-edit.component';\nimport {ProductDeleteComponent} from './product-delete/product-delete.component';\nimport {ProductViewComponent} from './product-view/product-view.component';\nimport {ProductHomeComponent} from './product-home/product-home.component';\nimport {NgModule} from '@angular/core';\n\n\nexport const productManagementRoute: Routes=[\n  {\n    path: '',\n    component: ProductHomeComponent,\n    canActivate: [UserAuthGuard],\n  },\n  {\n    path: 'list',\n    component: ProductListComponent,\n    canActivate: [UserAuthGuard],\n  },\n  {\n    path: 'new',\n    component: ProductNewComponent,\n    canActivate: [UserAuthGuard],\n  },\n  {\n    path: ':id',\n    component: ProductViewComponent,\n    canActivate: [UserAuthGuard],\n  },\n  {\n    path: ':id/edit',\n    component: ProductEditComponent,\n    canActivate: [UserAuthGuard],\n  },\n  {\n    path: ':id/delete',\n    component: ProductDeleteComponent,\n    canActivate: [UserAuthGuard],\n  }\n ];\n\n\n@NgModule(\n  {\n    imports: [\n      RouterModule.forChild(productManagementRoute),\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\n\nexport class ProductRoutingModule\n{\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9wcm9kdWN0L3Byb2R1Y3Qtdmlldy9wcm9kdWN0LXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {Product} from '../model/product';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProductService} from '../service/product.service';\nimport {CART_API_URL, INVENTORY_API_URL, PRODUCT_API_URL} from '../../../app.constants';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {CartService} from '../../cart/service/cart.service';\nimport {AuthService} from '../../../core/auth/auth.service';\nimport {CartProduct} from '../../cart/model/cart-product';\nimport {HttpClient} from '@angular/common/http';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {ProductInventory} from '../model/product-inventory';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-product-view',\n  templateUrl: './product-view.component.html',\n  styleUrls: ['./product-view.component.css']\n})\nexport class ProductViewComponent implements OnInit\n{\n  product: Product;\n  productInventory:ProductInventory;\n  productForm = new FormGroup({\n    id: new FormControl({value: '', disabled: true}),\n    name: new FormControl(''),\n    description: new FormControl(''),\n    price: new FormControl(''),\n    amount: new FormControl(''),\n    category: new FormControl(''),\n    currency: new FormControl(''),\n    manufacturer: new FormControl(''),\n    quantityAvailable: new FormControl('')\n  });\n\n  constructor(private productService: ProductService,\n              private route: ActivatedRoute,\n              private cartService: CartService,\n              private authService: AuthService,\n              private httpClient: HttpClient,\n              private spinner:NgxSpinnerService,\n              private router: Router)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.getProduct();\n    this.getProductQuantityFromInventory();\n  }\n\n  productDataAvailable(): boolean\n  {\n    return this.product !== undefined;\n  }\n\n  async addProductToCart()\n  {\n    this.spinner.show();\n\n    let cart = this.cartService.getCurrentCart;\n    if (cart === null)\n    {\n      const initializeCartUrl = environment.SERVER_URL + CART_API_URL + 'initialize';\n      let userProfile = this.authService.currentUserSubject.value.userProfile;\n      await this.cartService.initializeCart(initializeCartUrl, userProfile);\n    }\n      cart = this.cartService.getCurrentCart;\n      const addProductToCartUrl = environment.SERVER_URL + CART_API_URL + 'product/add';\n      let newCartProduct = new CartProduct();\n      newCartProduct.product = this.product;\n      newCartProduct.quantity = 1;\n      newCartProduct.cart = cart;\n      //newCartProduct.cart.id=cart.id;\n      newCartProduct = CartService.doesProductExistInCart(cart, newCartProduct);\n\n      this.cartService.addProductToCart(addProductToCartUrl, newCartProduct).subscribe(\n        data =>\n        {\n          localStorage.setItem('currentCart', JSON.stringify(data));\n          this.cartService.currentCartSubject.next(data);\n        },\n        error1 =>\n        {\n          this.spinner.hide();\n          console.log('Failed to update cart');\n        },\n        () =>\n        {\n          this.router.navigate(['/cart']);\n        }\n      );\n    }\n\n\n  private getProduct()\n  {\n    const id = this.route.snapshot.paramMap.get('id');\n    const url = environment.SERVER_URL + PRODUCT_API_URL + 'find/' + id;\n    this.productService.getProductDetails(url).pipe()\n      .subscribe(\n        data =>\n        {\n          this.product = data;\n          this.productForm.patchValue(\n            {\n              id: data.id,\n              name: data.name,\n              description: data.description,\n              price: data.price.currency.symbol + data.price.amount,\n              amount: data.price.amount,\n              currency: data.price.currency.symbol,\n              category: data.category.name,\n              manufacturer: data.manufacturer.name,\n            });\n        },\n        error =>\n        {\n          console.log(error);\n        });\n  }\n\n  private getProductQuantityFromInventory()\n  {\n    const id = this.route.snapshot.paramMap.get('id');\n    const url = environment.SERVER_URL + INVENTORY_API_URL + 'product/' + id;\n    this.productService.getProductInventory(url).pipe()\n        .subscribe(\n          data =>\n          {\n            this.productInventory = data;\n            this.productForm.patchValue(\n              {\n                quantityAvailable: data.quantity,\n              });\n          },\n          error =>\n          {\n            console.log(error);\n          });\n  }\n\n  isProductInventoryEmpty():boolean\n  {\n    return this.productInventory!==undefined && this.productInventory.quantity <= 0;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwaS9wcm9kdWN0L3Byb2R1Y3QuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../core/auth/auth.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit\n{\n\n  ngOnInit()\n  {\n    if(!AuthService.isUserLoggedIn())\n    {\n\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {ProductComponent} from './product.component';\nimport {ProductHomeComponent} from './product-home/product-home.component';\nimport {ProductListComponent} from './product-list/product-list.component';\nimport {ProductNewComponent} from './product-new/product-new.component';\nimport {ProductDeleteComponent} from './product-delete/product-delete.component';\nimport {ProductViewComponent} from './product-view/product-view.component';\nimport {ProductEditComponent} from './product-edit/product-edit.component';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {NgxSpinnerModule} from 'ngx-spinner';\nimport {RouterModule} from '@angular/router';\nimport {ProductRoutingModule} from './product-routing.module';\n\n@NgModule({\n  declarations:\n    [\n      ProductComponent,\n      ProductHomeComponent,\n      ProductListComponent,\n      ProductNewComponent,\n      ProductDeleteComponent,\n      ProductViewComponent,\n      ProductEditComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    RouterModule,\n    ProductRoutingModule\n  ],\n  exports:[\n    RouterModule\n  ]\n})\n\nexport class ProductModule\n{\n}\n"],"sourceRoot":""}